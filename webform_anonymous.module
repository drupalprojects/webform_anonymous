<?php
/**
 * @file
 * This module enables a webform setting to anonymize the webform's results from everyone.
 *
 * @author Daniel Imhoff
 */

/**
 * Implements hook_permission().
 */
function webform_anonymous_permission() {
  return array(
    'anonymize webform results' => array(
      'title' => t('Edit anonymize results setting'),
      'description' => t('Change the webform setting that anonymizes users who have submitted a webform.'),
    ),
  );
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function webform_anonymous_form_webform_configure_form_alter(&$form, &$form_state) {
  if(user_access('anonymize webform results')) {
    $anonymous_setting = _webform_anonymous_webform_anonymous_setting($form['#node']->nid);

    if (FALSE !== $anonymous_setting) {
      $locker = user_load($anonymous_setting['locked_uid']);
      $locker_uri = entity_uri('user', $locker);
    }

    // Add custom Javascript.
    $form['#attached']['js'][] = drupal_get_path('module', 'webform_anonymous') . '/js/webform_anonymous.admin.js';

    // Add a custom submit handler.
    $form['#submit'][] = 'webform_anonymous_form_webform_configure_form_submit';

    // Add a Yes or No question to make the results of this webform anonymous or not.
    $form['submission']['anonymous'] = array(
      '#type' => 'radios',
      '#title' => t('Anonymize results'),
      '#description' => t('Make the results of this webform anonymous to everyone.'),
      '#options' => array(
        1 => t('Yes'),
        0 => t('No'),
      ),
      '#default_value' => $anonymous_setting !== FALSE && $anonymous_setting['anonymous'] ? 1 : 0,
      '#disabled' => $anonymous_setting !== FALSE && $anonymous_setting['locked'] ? 1 : 0,
    );

    $form['submission']['anonymous_locked'] = array(
      '#type' => 'checkbox',
      '#title' => t('Lock anonymity'),
      '#description' => $anonymous_setting === FALSE || !$anonymous_setting['locked'] ?
        t('Warning: Once locked, the results of this webform will be irreversibly anonymous.') :
        t('The results of this webform have been locked in an anonymous state by !user.', array('!user' => l($locker->name, $locker_uri['path']))),
      '#default_value' => $anonymous_setting !== FALSE && $anonymous_setting['locked'] ? 1 : 0,
      '#states' => array(
        'visible' => array(
          ':input[name="anonymous"]' => array('value' => 1),
        ),
      ),
      '#disabled' => $anonymous_setting !== FALSE && $anonymous_setting['locked'] ? 1 : 0,
    );
  }
}

/**
 * Additional submit handler for saving whether or not the webform results are anonymous.
 */
function webform_anonymous_form_webform_configure_form_submit(&$form, &$form_state) {
  global $user;

  // Fetch the anonymous setting of this webform.
  $anonymous_setting = _webform_anonymous_webform_anonymous_setting($form['#node']->nid);

  // No need to do all this work if it wasn't changed.
  if (FALSE === $anonymous_setting
    || $form_state['values']['anonymous'] !== $anonymous_setting['anonymous']
    || (string) $form_state['values']['anonymous_locked'] !== $anonymous_setting['locked']) {

    if (!$form_state['values']['anonymous']) {
      $form_state['values']['anonymous_locked'] = 0;
    }

    $record = array(
      'nid' => $form['#node']->nid,
      'anonymous' => $form_state['values']['anonymous'],
      'locked' => $form_state['values']['anonymous_locked'],
      'locked_uid' => FALSE !== $anonymous_setting && $form_state['values']['anonymous_locked'] !== $anonymous_setting['locked'] ? $user->uid : 0,
    );

    // Insert or update the anonymous status of this webform.
    drupal_write_record('webform_anonymous', $record, FALSE === $anonymous_setting ? array() : 'nid');
  }
}

/**
 * Implements hook_form_alter().
 */
function webform_anonymous_form_alter(&$form, &$form_state) {
  if (!isset($form['#node']) || !in_array($form['#node']->type, webform_variable_get('webform_node_types'))) {
    return;
  }

  // Set the status of the anonymity of this webform's results.
  $form['#node']->webform['anonymous'] = _webform_anonymous_webform_is_anonymous($form['#node']->nid);
}

/**
 * Implements hook_webform_submission_load().
 */
function webform_anonymous_webform_submission_load(&$submissions) {
  foreach ($submissions as $sid => $submission) {
    // If called for, anonymize uid and ip of submission before display.
    if (_webform_anonymous_webform_is_anonymous($submission->nid)) {
      $submission->uid = 0;
      $submission->name = 'Anonymous';
      $submission->remote_addr = '0.0.0.0';
    }
  }
}

/**
 * Returns 1 if the webform (found by node ID) is anonymous, 0 or FALSE otherwise.
 *
 * @param $nid
 *   The node ID that the webform belongs.
 */
function _webform_anonymous_webform_is_anonymous($nid) {
  return db_select('webform_anonymous', 'w', array('fetch' => PDO::FETCH_ASSOC))
    ->condition('w.nid', $nid)
    ->fields('w')
    ->execute()
    ->fetchField(1);
}

/**
 * Returns a row of information represented as an associated array.
 *
 * @param $nid
 *   The node ID that the webform belongs.
 */
function _webform_anonymous_webform_anonymous_setting($nid) {
  return db_select('webform_anonymous', 'w', array('fetch' => PDO::FETCH_ASSOC))
    ->condition('w.nid', $nid)
    ->fields('w')
    ->execute()
    ->fetchAssoc();
}
