<?php
/**
 * @file
 * This module enables a webform setting to anonymize the webform's results from everyone.
 *
 * @author Daniel Imhoff
 */

/**
 * Implements hook_permission().
 */
function webform_anonymous_permission() {
  return array(
    'anonymize webform results' => array(
      'title' => t('Edit anonymize results setting'),
      'description' => t('Change the webform setting that anonymizes users who have submitted a webform.'),
    ),
  );
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function webform_anonymous_form_webform_configure_form_alter(&$form, &$form_state) {
  if(user_access('anonymize webform results')) {
    // Add a custom submit handler.
    $form['#submit'][] = 'webform_anonymous_form_webform_configure_form_submit';

    // Add a Yes or No question to make the results of this webform anonymous or not.
    $form['submission']['anonymous'] = array(
      '#type' => 'radios',
      '#title' => t('Anonymize results'),
      '#description' => t('Make the results of this webform anonymous to everyone.'),
      '#options' => array(
        1 => t('Yes'),
        0 => t('No'),
      ),
      '#default_value' => _webform_anonymous_fetch_anonymous_status($form['#node']->nid) ? 1 : 0,
    );
  }
}

/**
 * Additional submit handler for saving whether or not the webform results are anonymous.
 */
function webform_anonymous_form_webform_configure_form_submit(&$form, &$form_state) {
  // Fetch the preexisting value.
  $existing = _webform_anonymous_fetch_anonymous_status($form_state['values']['nid']);

  // No need to do all this work if it wasn't changed.
  if ($form_state['values']['anonymous'] !== $existing) {
    $record = array(
      'nid' => $form_state['values']['nid'],
      'anonymous' => $form_state['values']['anonymous'],
    );

    // Insert or update the anonymous status of this webform.
    drupal_write_record('webform_anonymous', $record, FALSE === $existing ? array() : 'nid');
  }
}

/**
 * Implements hook_form_alter().
 */
function webform_anonymous_form_alter(&$form, &$form_state) {
  if (!isset($form['#node']) || !in_array($form['#node']->type, webform_variable_get('webform_node_types'))) {
    return;
  }

  // Set the status of the anonymity of this webform's results.
  $form['#node']->webform['anonymous'] = _webform_anonymous_fetch_anonymous_status($form['#node']->nid);
}

/**
 * Implements hook_webform_submission_load().
 */
function webform_anonymous_webform_submission_load(&$submissions) {
  foreach ($submissions as $sid => $submission) {
    // If called for, anonymize uid and ip of submission before display.
    if (_webform_anonymous_fetch_anonymous_status($submission->nid)) {
      $submission->uid = 0;
      $submission->name = 'Anonymous';
      $submission->remote_addr = '0.0.0.0';
    }
  }
}

/**
 * Grabs the anonymous setting of a webform based on the node ID that it belongs.
 *
 * @param $nid
 *   The node ID that the webform belongs.
 */
function _webform_anonymous_fetch_anonymous_status($nid) {
  return db_select('webform_anonymous', 'w', array('fetch' => PDO::FETCH_ASSOC))
    ->condition('w.nid', $nid)
    ->fields('w')
    ->execute()
    ->fetchField(1);
}
